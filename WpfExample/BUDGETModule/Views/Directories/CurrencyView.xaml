<Window x:Class="BUDGETModule.Views.Directories.CurrencyView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:baseLib="clr-namespace:BaseLib.Services;assembly=BaseLib" 
        xmlns:convertTrim="clr-namespace:Converters.Trim;assembly=Converters" 
        xmlns:convertToBool="clr-namespace:Converters.ToBool;assembly=Converters"
        xmlns:convertToVisibility="clr-namespace:Converters.ToVisibility;assembly=Converters"
        xmlns:strRes="clr-namespace:BUDGETModule.Properties"
        xmlns:strCommonRes="clr-namespace:Resources.Properties;assembly=Resources"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"     
        xmlns:MVVM="clr-namespace:MVVMHelper;assembly=MVVMHelper"
        mc:Ignorable="d"
        Height="450" Width="420" MinHeight="420" MinWidth="420"
        Style="{StaticResource StandartWindowStyle}" WindowStartupLocation="CenterScreen" 
        Title="{x:Static strRes:Resources.fCurrency}">

    <Grid Style="{StaticResource FormGrid}">
        <Grid.Resources>
            <convertToVisibility:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <convertToBool:ActionModeToBoolConverter x:Key="ActionModeToEnableConverter"/>
            <convertToVisibility:ActionModeToVisibilityConverter x:Key="actionModeConverter"/>
            <convertToBool:ActionModeToBoolReverseConverter x:Key="ActionModeToEnableReverseConverter" />
            <convertToVisibility:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
            <convertToBool:ObjIsNotNullConverter x:Key="ObjIsNotNullConverter" />
            <convertToVisibility:ConjunctionBoolValuesToVisibleMultiConverter x:Key="ConjunctionBoolValuesToVisibleMultiConverter" />
            <convertToBool:DisjunctionBoolValuesMultiConverter x:Key="DisjunctionBoolValuesMultiConverter" />
            <convertToBool:ConjunctionBoolValuesMultiConverter x:Key="ConjunctionBoolValuesMultiConverter" />
            <convertTrim:TrimConverter x:Key="TrimConverter"/>
            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding Path=.}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel  LastChildFill="True" >
            <!-- форма добавления/редактирования -->
            <GroupBox  DockPanel.Dock="Bottom" 
                      DataContext="{Binding Path=ModifyAndViewVM}">

                    <Grid IsEnabled="{Binding Path=Action, Converter={StaticResource ActionModeToEnableConverter}, ConverterParameter={x:Static baseLib:ActionMode.Modification}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <TextBlock  Grid.Row="0" Grid.Column="0" Text="{x:Static strRes:Resources.txtCurrencyCode}" />
                        <TextBox Grid.Row="0" Grid.Column="1" MVVM:FocusExtension.IsFocused="{Binding Path=IsFocusedToStartModify}"
                                 Text="{Binding Path=ViewOrModifyTargetVM.Code, Converter={StaticResource TrimConverter}, ValidatesOnDataErrors=True}" />

                        <TextBlock  Grid.Row="1" Grid.Column="0" Text="{x:Static strRes:Resources.txtCurrencyName}" />
                        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 Text="{Binding Path=ViewOrModifyTargetVM.Name, Converter={StaticResource TrimConverter}, ValidatesOnDataErrors=True}" />

                        <CheckBox Grid.Row="0" Grid.Column="3"  Content="{x:Static strRes:Resources.txtVAT}" IsChecked="{Binding Path=ViewOrModifyTargetVM.VAT}">
                        </CheckBox>


                        <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Style="{StaticResource BottomButtonGroup}" >
                            <Button Style="{StaticResource BottomButton}"  Content="{x:Static strCommonRes:Resources.txtSave}" Command="{Binding Path=SaveCommand}"
                                Visibility="{Binding Path=Action, Converter={StaticResource actionModeConverter}, ConverterParameter={x:Static baseLib:ActionMode.Editing}}"/>
                            <Button Style="{StaticResource BottomButton}"  Content="{x:Static strCommonRes:Resources.txtAply}"  Command="{Binding Path=AplyCommand}"
                                Visibility="{Binding Path=Action, Converter={StaticResource actionModeConverter}, ConverterParameter={x:Static baseLib:ActionMode.Adding}}"/>
                            <Button Style="{StaticResource BottomButton}"  Content="{x:Static strCommonRes:Resources.txtAdd}"  Command="{Binding Path=AddCommand}"
                                Visibility="{Binding Path=Action, Converter={StaticResource actionModeConverter}, ConverterParameter={x:Static baseLib:ActionMode.Adding}}"/>
                            <Button Style="{StaticResource BottomButton}"  Content="{x:Static strCommonRes:Resources.txtCancel}"  Command="{Binding Path=CancelCommand}"
                                Visibility="{Binding Path=Action, Converter={StaticResource actionModeConverter}, ConverterParameter={x:Static baseLib:ActionMode.Modification}}"/>
                        </StackPanel>
                    </Grid>


            </GroupBox>

            <GroupBox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Панель инструментов -->
                    <ToolBar >
                        <Button Content="{x:Static strCommonRes:Resources.txtAdd}"
                                Command="{Binding Path=MenuCommandCRUDVM.AddNewCommand}"/>
                        <Button Content="{x:Static strCommonRes:Resources.txtEdit}" 
                                Command="{Binding Path=MenuCommandCRUDVM.EditCommand}"/>
                        <Button Content="{x:Static strCommonRes:Resources.txtDelete}"
                                Command="{Binding Path=MenuCommandCRUDVM.DeleteCommand}"/>
                    </ToolBar>

                    <!--Валюта таблица-->
                    <telerik:RadGridView Grid.Row="1" x:Name="Currencies" ItemsSource="{Binding Path=VMCollection}" IsReadOnly="True"  ShowGroupPanel="False" AutoGenerateColumns="False" ShowToolTipOnTrimmedText="True"
                                         SelectedItem="{Binding Path=CurrentElement}"  IsSynchronizedWithCurrentItem="True" RowIndicatorVisibility="Collapsed" >
                        <telerik:RadGridView.Columns>
                            <telerik:GridViewDataColumn Width="Auto" Header="{x:Static strRes:Resources.txtCurrencyCode}" DataMemberBinding="{Binding Code}"/>
                            <telerik:GridViewDataColumn Width="2*" Header="{x:Static strRes:Resources.txtCurrencyName}" DataMemberBinding="{Binding Name}"/>
                            <telerik:GridViewCheckBoxColumn Width="*" Header="{x:Static strRes:Resources.txtVAT}" DataMemberBinding="{Binding VAT, Mode=OneWay}">
                                <telerik:GridViewCheckBoxColumn.CellStyle>
                                    <Style TargetType="telerik:GridViewCell">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </telerik:GridViewCheckBoxColumn.CellStyle>
                            </telerik:GridViewCheckBoxColumn>
                        </telerik:RadGridView.Columns>

                        <!--Контекстное меню-->
                        <telerik:RadContextMenu.ContextMenu>
                            <telerik:RadContextMenu x:Name="radContextMenu" IconColumnWidth="35">
                                <telerik:RadMenuItem Header="{x:Static strCommonRes:Resources.txtEdit}" Command="{Binding Path=MenuCommandCRUDVM.EditCommand}"/>
                                <telerik:RadMenuItem Header="{x:Static strCommonRes:Resources.txtDelete}" Command="{Binding Path=MenuCommandCRUDVM.DeleteCommand}"/>

                            </telerik:RadContextMenu>
                        </telerik:RadContextMenu.ContextMenu>

                    </telerik:RadGridView>
                </Grid>
            </GroupBox>
        </DockPanel>
    </Grid>
</Window>
