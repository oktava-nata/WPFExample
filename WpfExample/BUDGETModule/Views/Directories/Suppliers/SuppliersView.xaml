<Window x:Class="BUDGETModule.Views.Directories.Suppliers.SuppliersView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:baseLib="clr-namespace:BaseLib.Services;assembly=BaseLib" 
        xmlns:convertTrim="clr-namespace:Converters.Trim;assembly=Converters" 
        xmlns:convertToBool="clr-namespace:Converters.ToBool;assembly=Converters"
        xmlns:convertToVisibility="clr-namespace:Converters.ToVisibility;assembly=Converters"
        xmlns:convertToBrush="clr-namespace:Converters.ToBrush;assembly=Converters"
        xmlns:strRes="clr-namespace:BUDGETModule.Properties"
        xmlns:strCommonRes="clr-namespace:Resources.Properties;assembly=Resources"  
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        
        mc:Ignorable="d"
        Height="400" Width="1000" MinHeight="400" MinWidth="900"
        Style="{StaticResource StandartWindowStyle}" WindowStartupLocation="CenterScreen" 
        Title="{x:Static strRes:Resources.fSuppliers}">

    <Grid Style="{StaticResource FormGrid}">
        <Grid.Resources>
            <convertToVisibility:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <convertToBool:ActionModeToBoolConverter x:Key="ActionModeToEnableConverter"/>
            <convertToVisibility:ActionModeToVisibilityConverter x:Key="actionModeConverter"/>
            <convertToBool:ActionModeToBoolReverseConverter x:Key="ActionModeToEnableReverseConverter" />
            <convertToVisibility:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
            <convertToBool:ObjIsNotNullConverter x:Key="ObjIsNotNullConverter" />
            <convertToVisibility:ConjunctionBoolValuesToVisibleMultiConverter x:Key="ConjunctionBoolValuesToVisibleMultiConverter" />
            <convertToBool:DisjunctionBoolValuesMultiConverter x:Key="DisjunctionBoolValuesMultiConverter" />
            <convertToBool:ConjunctionBoolValuesMultiConverter x:Key="ConjunctionBoolValuesMultiConverter" />
            <convertTrim:TrimConverter x:Key="TrimConverter"/>
            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding Path=.}"/>


        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Фильтрация для поставщиков пока не делаем-->
        <!--<Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="{x:Static strCommonRes:Resources.txtShipowner}"/>
            <ComboBox Grid.Column="1" ItemsSource="{Binding Path=ShipOwnerVMList}"
                          IsSynchronizedWithCurrentItem="True"  SelectedValuePath="ItemObject" SelectedValue="{Binding Path=ModifyTModel.Rank, ValidatesOnDataErrors=True}"/>
        </Grid>-->

        <GroupBox Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"/>
                    <ColumnDefinition Width="165*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Панель инструментов -->
                <ToolBar Visibility="{Binding Path=CanEdit, Converter={StaticResource BoolToVisibilityConverter}}" Grid.ColumnSpan="2">
                    <Button Content="{x:Static strCommonRes:Resources.txtAdd}"
                                Command="{Binding Path=MenuCommandCRUDVM.AddNewCommand}"/>
                    <Button Content="{x:Static strCommonRes:Resources.txtEdit}" 
                                Command="{Binding Path=MenuCommandCRUDVM.EditCommand}"/>
                    <Button Content="{x:Static strCommonRes:Resources.txtDelete}"
                                Command="{Binding Path=MenuCommandCRUDVM.DeleteCommand}"/>
                </ToolBar>

                <!--Поставщики таблица-->
                <telerik:RadGridView Grid.Row="1" x:Name="Suppliers" ItemsSource="{Binding Path=VMCollection}" IsReadOnly="True"  ShowGroupPanel="False" AutoGenerateColumns="False" ShowToolTipOnTrimmedText="True"
                                         SelectedItem="{Binding Path=CurrentElement, Mode=TwoWay}" Grid.ColumnSpan="2" >
                    <telerik:RadGridView.Columns>
                        <telerik:GridViewDataColumn Width="*" MinWidth="120" Header="{x:Static strRes:Resources.txtSupplierName}" DataMemberBinding="{Binding Name}"/>
                        <telerik:GridViewDataColumn Width="*" MinWidth="120" HeaderTextWrapping="Wrap" Header="{x:Static strRes:Resources.txtContactPerson}" DataMemberBinding="{Binding ContactPerson}"/>
                        <telerik:GridViewDataColumn Width="*" MinWidth="100" Header="{x:Static strRes:Resources.txtPhone}" DataMemberBinding="{Binding Phone}"/>
                        <telerik:GridViewDataColumn Width="*" MinWidth="120" Header="{x:Static strRes:Resources.txtAddress}" DataMemberBinding="{Binding Address}"/>
                        <telerik:GridViewCheckBoxColumn Width="100" HeaderTextWrapping="Wrap" Header="{x:Static strRes:Resources.txtBudgetCompany}" DataMemberBinding="{Binding IsUsedInCompanyBudget, Mode=OneWay}">
                            <telerik:GridViewCheckBoxColumn.CellStyle>
                                <Style TargetType="telerik:GridViewCell">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </telerik:GridViewCheckBoxColumn.CellStyle>
                        </telerik:GridViewCheckBoxColumn>
                        <telerik:GridViewDataColumn Width="*" MinWidth="120" HeaderTextWrapping="Wrap" Header="{x:Static strRes:Resources.txtBudgetFleet}" DataMemberBinding="{Binding ShipOwnerListAsString, TargetNullValue={x:Static strCommonRes:Resources.txtNotSpecified}}"/>
                        <telerik:GridViewCheckBoxColumn Width="145" MinWidth="145" HeaderTextWrapping="Wrap" Header="{x:Static strRes:Resources.txtNotConscientiousSuppliers}" DataMemberBinding="{Binding IsUnscrupulousSupplier, Mode=OneWay}">
                            <telerik:GridViewCheckBoxColumn.CellStyle>
                                <Style TargetType="telerik:GridViewCell">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </telerik:GridViewCheckBoxColumn.CellStyle>
                        </telerik:GridViewCheckBoxColumn>
                    </telerik:RadGridView.Columns>

                    <!--Контекстное меню-->
                    <telerik:RadContextMenu.ContextMenu>
                        <telerik:RadContextMenu x:Name="radContextMenu" IconColumnWidth="35">
                            <telerik:RadMenuItem Header="{x:Static strCommonRes:Resources.txtEdit}" Command="{Binding Path=MenuCommandCRUDVM.EditCommand}"/>
                            <telerik:RadMenuItem Header="{x:Static strCommonRes:Resources.txtDelete}" Command="{Binding Path=MenuCommandCRUDVM.DeleteCommand}"/>
                        </telerik:RadContextMenu>
                    </telerik:RadContextMenu.ContextMenu>

                </telerik:RadGridView>
            </Grid>

        </GroupBox>


    </Grid>
</Window>
